events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Upstream servers
    upstream frontend {
        server frontend:80;
    }
    
    upstream backend {
        server backend:3001;
    }

    server {
        listen 80;
        server_name localhost;

        # Root redirect
        location = / {
            return 301 /ssssmarttech/;
        }

        # Frontend - Serve React app at /ssssmarttech
        location /ssssmarttech/ {
            # Remove /ssssmarttech prefix before proxying to frontend
            rewrite ^/ssssmarttech/(.*)$ /$1 break;
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handle React Router routes (without trailing slash)
        location /ssssmarttech {
            return 301 /ssssmarttech/;
        }

        # Backend API
        location /api/ssssmarttech/ {
            # Remove /api/ssssmarttech prefix before proxying to backend
            rewrite ^/api/ssssmarttech/(.*)$ /$1 break;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support if needed
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Health check
        location /health {
            return 200 "Application healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
